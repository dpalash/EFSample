//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(EncDomain.SqlPersistanceEncObjects.EncManagementDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets0863bae94f68fb5806411b1a9e48477f39051088dcdb20be957baae8aee00961))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets0863bae94f68fb5806411b1a9e48477f39051088dcdb20be957baae8aee00961 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "0863bae94f68fb5806411b1a9e48477f39051088dcdb20be957baae8aee00961"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.DBEncCellReplacement")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.DBEncCell")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.DBEncProduct")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.DBEncProductPrice")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.DBEncProductType")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.DBIssuer")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.DBEncCellDBEncProduct")
            {
                return GetView6();
            }

            if (extentName == "EncManagementDbContext.EncCellReplacements")
            {
                return GetView7();
            }

            if (extentName == "EncManagementDbContext.EncCells")
            {
                return GetView8();
            }

            if (extentName == "EncManagementDbContext.EncProducts")
            {
                return GetView9();
            }

            if (extentName == "EncManagementDbContext.EncProductPrices")
            {
                return GetView10();
            }

            if (extentName == "EncManagementDbContext.EncProductTypes")
            {
                return GetView11();
            }

            if (extentName == "EncManagementDbContext.issuers")
            {
                return GetView12();
            }

            if (extentName == "EncManagementDbContext.DBEncCell_EncProducts")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.DBEncCellsHistory")
            {
                return GetView14();
            }

            if (extentName == "EncManagementDbContext.EncCellsHistories")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.DBExchangeRate")
            {
                return GetView16();
            }

            if (extentName == "EncManagementDbContext.ExchangeRates")
            {
                return GetView17();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncCellReplacement.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncCellReplacement
        [CodeFirstDatabaseSchema.DBEncCellReplacement](T1.DBEncCellReplacement_OriginalCellId, T1.DBEncCellReplacement_ReplacementCellId, T1.DBEncCellReplacement_ReplacedDate)
    FROM (
        SELECT 
            T.OriginalCellId AS DBEncCellReplacement_OriginalCellId, 
            T.ReplacementCellId AS DBEncCellReplacement_ReplacementCellId, 
            T.ReplacedDate AS DBEncCellReplacement_ReplacedDate, 
            True AS _from0
        FROM EncManagementDbContext.EncCellReplacements AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncCell.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncCell
        [CodeFirstDatabaseSchema.DBEncCell](T1.DBEncCell_Id, T1.DBEncCell_IssuerId, T1.DBEncCell_CellName, T1.DBEncCell_Description, T1.DBEncCell_NavigationalPurpose, T1.DBEncCell_BoundarySLat, T1.DBEncCell_BoundaryWLon, T1.DBEncCell_BoundaryNLat, T1.DBEncCell_BoundaryELon, T1.DBEncCell_PolygonPoints, T1.DBEncCell_BaseEdition, T1.DBEncCell_BaseIssueDate, T1.DBEncCell_LatestUpdateNumber, T1.DBEncCell_RecordLastUpdated, T1.DBEncCell_AddedDate, T1.DBEncCell_GeometryData, T1.DBEncCell_ReleaseDateUtc, T1.DBEncCell_CancelDateUtc, T1.DBEncCell_ReplaceDateUtc, T1.DBEncCell_Geography, T1.DBEncCell_DownloadedBaseEdition, T1.DBEncCell_DownloadedUpdateNumber, T1.DBEncCell_DownloadedUtcDate, T1.DBEncCell_Geometry, T1.DBEncCell_DownloadedIhoBaseEdition, T1.DBEncCell_DownloadedIhoUpdateNumber, T1.DBEncCell_DownloadedIhoUtcDate, T1.DBEncCell_IsForSale)
    FROM (
        SELECT 
            T.Id AS DBEncCell_Id, 
            T.IssuerId AS DBEncCell_IssuerId, 
            T.CellName AS DBEncCell_CellName, 
            T.Description AS DBEncCell_Description, 
            T.NavigationalPurpose AS DBEncCell_NavigationalPurpose, 
            T.BoundarySLat AS DBEncCell_BoundarySLat, 
            T.BoundaryWLon AS DBEncCell_BoundaryWLon, 
            T.BoundaryNLat AS DBEncCell_BoundaryNLat, 
            T.BoundaryELon AS DBEncCell_BoundaryELon, 
            T.PolygonPoints AS DBEncCell_PolygonPoints, 
            T.BaseEdition AS DBEncCell_BaseEdition, 
            T.BaseIssueDate AS DBEncCell_BaseIssueDate, 
            T.LatestUpdateNumber AS DBEncCell_LatestUpdateNumber, 
            T.RecordLastUpdated AS DBEncCell_RecordLastUpdated, 
            T.AddedDate AS DBEncCell_AddedDate, 
            T.GeometryData AS DBEncCell_GeometryData, 
            T.ReleaseDateUtc AS DBEncCell_ReleaseDateUtc, 
            T.CancelDateUtc AS DBEncCell_CancelDateUtc, 
            T.ReplaceDateUtc AS DBEncCell_ReplaceDateUtc, 
            T.Geography AS DBEncCell_Geography, 
            T.DownloadedBaseEdition AS DBEncCell_DownloadedBaseEdition, 
            T.DownloadedUpdateNumber AS DBEncCell_DownloadedUpdateNumber, 
            T.DownloadedUtcDate AS DBEncCell_DownloadedUtcDate, 
            T.Geometry AS DBEncCell_Geometry, 
            T.DownloadedIhoBaseEdition AS DBEncCell_DownloadedIhoBaseEdition, 
            T.DownloadedIhoUpdateNumber AS DBEncCell_DownloadedIhoUpdateNumber, 
            T.DownloadedIhoUtcDate AS DBEncCell_DownloadedIhoUtcDate, 
            T.IsForSale AS DBEncCell_IsForSale, 
            True AS _from0
        FROM EncManagementDbContext.EncCells AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncProduct
        [CodeFirstDatabaseSchema.DBEncProduct](T1.DBEncProduct_Id, T1.DBEncProduct_Type, T1.DBEncProduct_Name, T1.DBEncProduct_Description, T1.DBEncProduct_ValidLicensePeriod, T1.DBEncProduct_IsForSale, T1.DBEncProduct_EncProductTypeId, T1.DBEncProduct_IssuerId, T1.DBEncProduct_PriceBand, T1.DBEncProduct_CountryId)
    FROM (
        SELECT 
            T.Id AS DBEncProduct_Id, 
            T.Type AS DBEncProduct_Type, 
            T.Name AS DBEncProduct_Name, 
            T.Description AS DBEncProduct_Description, 
            T.ValidLicensePeriod AS DBEncProduct_ValidLicensePeriod, 
            T.IsForSale AS DBEncProduct_IsForSale, 
            T.EncProductTypeId AS DBEncProduct_EncProductTypeId, 
            T.IssuerId AS DBEncProduct_IssuerId, 
            T.PriceBand AS DBEncProduct_PriceBand, 
            T.CountryId AS DBEncProduct_CountryId, 
            True AS _from0
        FROM EncManagementDbContext.EncProducts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncProductPrice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncProductPrice
        [CodeFirstDatabaseSchema.DBEncProductPrice](T1.DBEncProductPrice_EncProductId, T1.DBEncProductPrice_EncOrderTypeId, T1.DBEncProductPrice_ValidFromUtcDate, T1.DBEncProductPrice_ValidToUtcDateTo, T1.DBEncProductPrice_Price)
    FROM (
        SELECT 
            T.EncProductId AS DBEncProductPrice_EncProductId, 
            T.EncOrderTypeId AS DBEncProductPrice_EncOrderTypeId, 
            T.ValidFromUtcDate AS DBEncProductPrice_ValidFromUtcDate, 
            T.ValidToUtcDateTo AS DBEncProductPrice_ValidToUtcDateTo, 
            T.Price AS DBEncProductPrice_Price, 
            True AS _from0
        FROM EncManagementDbContext.EncProductPrices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncProductType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncProductType
        [CodeFirstDatabaseSchema.DBEncProductType](T1.DBEncProductType_Id, T1.DBEncProductType_Name)
    FROM (
        SELECT 
            T.Id AS DBEncProductType_Id, 
            T.Name AS DBEncProductType_Name, 
            True AS _from0
        FROM EncManagementDbContext.EncProductTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBIssuer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBIssuer
        [CodeFirstDatabaseSchema.DBIssuer](T1.[DBIssuer._Id], T1.[DBIssuer._Issuer], T1.[DBIssuer._IssuerShortName], T1.[DBIssuer._Active])
    FROM (
        SELECT 
            T.Id AS [DBIssuer._Id], 
            T.Name AS [DBIssuer._Issuer], 
            T.ShortName AS [DBIssuer._IssuerShortName], 
            T.Active AS [DBIssuer._Active], 
            True AS _from0
        FROM EncManagementDbContext.issuers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncCellDBEncProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncCellDBEncProduct
        [CodeFirstDatabaseSchema.DBEncCellDBEncProduct](T1.DBEncCellDBEncProduct_EncCellId, T1.DBEncCellDBEncProduct_EncProductId)
    FROM (
        SELECT 
            Key(T.DBEncCell_EncProducts_Source).Id AS DBEncCellDBEncProduct_EncCellId, 
            Key(T.DBEncCell_EncProducts_Target).Id AS DBEncCellDBEncProduct_EncProductId, 
            True AS _from0
        FROM EncManagementDbContext.DBEncCell_EncProducts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.EncCellReplacements.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EncCellReplacements
        [EncDomain.SqlPersistanceEncObjects.DBEncCellReplacement](T1.DBEncCellReplacement_OriginalCellId, T1.DBEncCellReplacement_ReplacementCellId, T1.DBEncCellReplacement_ReplacedDate)
    FROM (
        SELECT 
            T.OriginalCellId AS DBEncCellReplacement_OriginalCellId, 
            T.ReplacementCellId AS DBEncCellReplacement_ReplacementCellId, 
            T.ReplacedDate AS DBEncCellReplacement_ReplacedDate, 
            True AS _from0
        FROM CodeFirstDatabase.DBEncCellReplacement AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.EncCells.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EncCells
        [EncDomain.SqlPersistanceEncObjects.DBEncCell](T1.DBEncCell_Id, T1.DBEncCell_IssuerId, T1.DBEncCell_CellName, T1.DBEncCell_Description, T1.DBEncCell_NavigationalPurpose, T1.DBEncCell_BoundarySLat, T1.DBEncCell_BoundaryWLon, T1.DBEncCell_BoundaryNLat, T1.DBEncCell_BoundaryELon, T1.DBEncCell_PolygonPoints, T1.DBEncCell_BaseEdition, T1.DBEncCell_BaseIssueDate, T1.DBEncCell_LatestUpdateNumber, T1.DBEncCell_RecordLastUpdated, T1.DBEncCell_AddedDate, T1.DBEncCell_GeometryData, T1.DBEncCell_ReleaseDateUtc, T1.DBEncCell_CancelDateUtc, T1.DBEncCell_ReplaceDateUtc, T1.DBEncCell_Geography, T1.DBEncCell_DownloadedBaseEdition, T1.DBEncCell_DownloadedUpdateNumber, T1.DBEncCell_DownloadedUtcDate, T1.DBEncCell_Geometry, T1.DBEncCell_DownloadedIhoBaseEdition, T1.DBEncCell_DownloadedIhoUpdateNumber, T1.DBEncCell_DownloadedIhoUtcDate, T1.DBEncCell_IsForSale)
    FROM (
        SELECT 
            T.Id AS DBEncCell_Id, 
            T.IssuerId AS DBEncCell_IssuerId, 
            T.CellName AS DBEncCell_CellName, 
            T.Description AS DBEncCell_Description, 
            T.NavigationalPurpose AS DBEncCell_NavigationalPurpose, 
            T.BoundarySLat AS DBEncCell_BoundarySLat, 
            T.BoundaryWLon AS DBEncCell_BoundaryWLon, 
            T.BoundaryNLat AS DBEncCell_BoundaryNLat, 
            T.BoundaryELon AS DBEncCell_BoundaryELon, 
            T.PolygonPoints AS DBEncCell_PolygonPoints, 
            T.BaseEdition AS DBEncCell_BaseEdition, 
            T.BaseIssueDate AS DBEncCell_BaseIssueDate, 
            T.LatestUpdateNumber AS DBEncCell_LatestUpdateNumber, 
            T.RecordLastUpdated AS DBEncCell_RecordLastUpdated, 
            T.AddedDate AS DBEncCell_AddedDate, 
            T.GeometryData AS DBEncCell_GeometryData, 
            T.ReleaseDateUtc AS DBEncCell_ReleaseDateUtc, 
            T.CancelDateUtc AS DBEncCell_CancelDateUtc, 
            T.ReplaceDateUtc AS DBEncCell_ReplaceDateUtc, 
            T.Geography AS DBEncCell_Geography, 
            T.DownloadedBaseEdition AS DBEncCell_DownloadedBaseEdition, 
            T.DownloadedUpdateNumber AS DBEncCell_DownloadedUpdateNumber, 
            T.DownloadedUtcDate AS DBEncCell_DownloadedUtcDate, 
            T.Geometry AS DBEncCell_Geometry, 
            T.DownloadedIhoBaseEdition AS DBEncCell_DownloadedIhoBaseEdition, 
            T.DownloadedIhoUpdateNumber AS DBEncCell_DownloadedIhoUpdateNumber, 
            T.DownloadedIhoUtcDate AS DBEncCell_DownloadedIhoUtcDate, 
            T.IsForSale AS DBEncCell_IsForSale, 
            True AS _from0
        FROM CodeFirstDatabase.DBEncCell AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.EncProducts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EncProducts
        [EncDomain.SqlPersistanceEncObjects.DBEncProduct](T1.DBEncProduct_Id, T1.DBEncProduct_Type, T1.DBEncProduct_Name, T1.DBEncProduct_Description, T1.DBEncProduct_ValidLicensePeriod, T1.DBEncProduct_IsForSale, T1.DBEncProduct_EncProductTypeId, T1.DBEncProduct_IssuerId, T1.DBEncProduct_PriceBand, T1.DBEncProduct_CountryId)
    FROM (
        SELECT 
            T.Id AS DBEncProduct_Id, 
            T.Type AS DBEncProduct_Type, 
            T.Name AS DBEncProduct_Name, 
            T.Description AS DBEncProduct_Description, 
            T.ValidLicensePeriod AS DBEncProduct_ValidLicensePeriod, 
            T.IsForSale AS DBEncProduct_IsForSale, 
            T.EncProductTypeId AS DBEncProduct_EncProductTypeId, 
            T.IssuerId AS DBEncProduct_IssuerId, 
            T.PriceBand AS DBEncProduct_PriceBand, 
            T.CountryId AS DBEncProduct_CountryId, 
            True AS _from0
        FROM CodeFirstDatabase.DBEncProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.EncProductPrices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EncProductPrices
        [EncDomain.SqlPersistanceEncObjects.DBEncProductPrice](T1.DBEncProductPrice_EncProductId, T1.DBEncProductPrice_EncOrderTypeId, T1.DBEncProductPrice_ValidFromUtcDate, T1.DBEncProductPrice_ValidToUtcDateTo, T1.DBEncProductPrice_Price)
    FROM (
        SELECT 
            T.EncProductId AS DBEncProductPrice_EncProductId, 
            T.EncOrderTypeId AS DBEncProductPrice_EncOrderTypeId, 
            T.ValidFromUtcDate AS DBEncProductPrice_ValidFromUtcDate, 
            T.ValidToUtcDateTo AS DBEncProductPrice_ValidToUtcDateTo, 
            T.Price AS DBEncProductPrice_Price, 
            True AS _from0
        FROM CodeFirstDatabase.DBEncProductPrice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.EncProductTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EncProductTypes
        [EncDomain.SqlPersistanceEncObjects.DBEncProductType](T1.DBEncProductType_Id, T1.DBEncProductType_Name)
    FROM (
        SELECT 
            T.Id AS DBEncProductType_Id, 
            T.Name AS DBEncProductType_Name, 
            True AS _from0
        FROM CodeFirstDatabase.DBEncProductType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.issuers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing issuers
        [EncDomain.SqlPersistanceEncObjects.DBIssuer](T1.DBIssuer_Id, T1.DBIssuer_Name, T1.DBIssuer_ShortName, T1.DBIssuer_Active)
    FROM (
        SELECT 
            T._Id AS DBIssuer_Id, 
            T._Issuer AS DBIssuer_Name, 
            T._IssuerShortName AS DBIssuer_ShortName, 
            T._Active AS DBIssuer_Active, 
            True AS _from0
        FROM CodeFirstDatabase.DBIssuer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.DBEncCell_EncProducts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncCell_EncProducts
        [EncDomain.SqlPersistanceEncObjects.DBEncCell_EncProducts](T3.[DBEncCell_EncProducts.DBEncCell_EncProducts_Source], T3.[DBEncCell_EncProducts.DBEncCell_EncProducts_Target])
    FROM (
        SELECT -- Constructing DBEncCell_EncProducts_Source
            CreateRef(EncManagementDbContext.EncCells, row(T2.[DBEncCell_EncProducts.DBEncCell_EncProducts_Source.Id]), [EncDomain.SqlPersistanceEncObjects.DBEncCell]) AS [DBEncCell_EncProducts.DBEncCell_EncProducts_Source], 
            T2.[DBEncCell_EncProducts.DBEncCell_EncProducts_Target]
        FROM (
            SELECT -- Constructing DBEncCell_EncProducts_Target
                T1.[DBEncCell_EncProducts.DBEncCell_EncProducts_Source.Id], 
                CreateRef(EncManagementDbContext.EncProducts, row(T1.[DBEncCell_EncProducts.DBEncCell_EncProducts_Target.Id]), [EncDomain.SqlPersistanceEncObjects.DBEncProduct]) AS [DBEncCell_EncProducts.DBEncCell_EncProducts_Target]
            FROM (
                SELECT 
                    T.EncCellId AS [DBEncCell_EncProducts.DBEncCell_EncProducts_Source.Id], 
                    T.EncProductId AS [DBEncCell_EncProducts.DBEncCell_EncProducts_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.DBEncCellDBEncProduct AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBEncCellsHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBEncCellsHistory
        [CodeFirstDatabaseSchema.DBEncCellsHistory](T1.DBEncCellsHistory_Id, T1.DBEncCellsHistory_UtcAuditDate, T1.DBEncCellsHistory_IssuerId, T1.DBEncCellsHistory_CellName, T1.DBEncCellsHistory_Description, T1.DBEncCellsHistory_NavigationalPurpose, T1.DBEncCellsHistory_BoundarySLat, T1.DBEncCellsHistory_BoundaryWLon, T1.DBEncCellsHistory_BoundaryNLat, T1.DBEncCellsHistory_BoundaryELon, T1.DBEncCellsHistory_PolygonPoints, T1.DBEncCellsHistory_BaseEdition, T1.DBEncCellsHistory_BaseIssueDate, T1.DBEncCellsHistory_LatestUpdateNumber, T1.DBEncCellsHistory_RecordLastUpdated, T1.DBEncCellsHistory_AddedDate, T1.DBEncCellsHistory_GeometryData, T1.DBEncCellsHistory_ReleaseDateUtc, T1.DBEncCellsHistory_CancelDateUtc, T1.DBEncCellsHistory_ReplaceDateUtc, T1.DBEncCellsHistory_Geography, T1.DBEncCellsHistory_DownloadedBaseEdition, T1.DBEncCellsHistory_DownloadedUpdateNumber, T1.DBEncCellsHistory_DownloadedUtcDate)
    FROM (
        SELECT 
            T.Id AS DBEncCellsHistory_Id, 
            T.UtcAuditDate AS DBEncCellsHistory_UtcAuditDate, 
            T.IssuerId AS DBEncCellsHistory_IssuerId, 
            T.CellName AS DBEncCellsHistory_CellName, 
            T.Description AS DBEncCellsHistory_Description, 
            T.NavigationalPurpose AS DBEncCellsHistory_NavigationalPurpose, 
            T.BoundarySLat AS DBEncCellsHistory_BoundarySLat, 
            T.BoundaryWLon AS DBEncCellsHistory_BoundaryWLon, 
            T.BoundaryNLat AS DBEncCellsHistory_BoundaryNLat, 
            T.BoundaryELon AS DBEncCellsHistory_BoundaryELon, 
            T.PolygonPoints AS DBEncCellsHistory_PolygonPoints, 
            T.BaseEdition AS DBEncCellsHistory_BaseEdition, 
            T.BaseIssueDate AS DBEncCellsHistory_BaseIssueDate, 
            T.LatestUpdateNumber AS DBEncCellsHistory_LatestUpdateNumber, 
            T.RecordLastUpdated AS DBEncCellsHistory_RecordLastUpdated, 
            T.AddedDate AS DBEncCellsHistory_AddedDate, 
            T.GeometryData AS DBEncCellsHistory_GeometryData, 
            T.ReleaseDateUtc AS DBEncCellsHistory_ReleaseDateUtc, 
            T.CancelDateUtc AS DBEncCellsHistory_CancelDateUtc, 
            T.ReplaceDateUtc AS DBEncCellsHistory_ReplaceDateUtc, 
            T.Geography AS DBEncCellsHistory_Geography, 
            T.DownloadedBaseEdition AS DBEncCellsHistory_DownloadedBaseEdition, 
            T.DownloadedUpdateNumber AS DBEncCellsHistory_DownloadedUpdateNumber, 
            T.DownloadedUtcDate AS DBEncCellsHistory_DownloadedUtcDate, 
            True AS _from0
        FROM EncManagementDbContext.EncCellsHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.EncCellsHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EncCellsHistories
        [EncDomain.SqlPersistanceEncObjects.DBEncCellsHistory](T1.DBEncCellsHistory_Id, T1.DBEncCellsHistory_UtcAuditDate, T1.DBEncCellsHistory_IssuerId, T1.DBEncCellsHistory_CellName, T1.DBEncCellsHistory_Description, T1.DBEncCellsHistory_NavigationalPurpose, T1.DBEncCellsHistory_BoundarySLat, T1.DBEncCellsHistory_BoundaryWLon, T1.DBEncCellsHistory_BoundaryNLat, T1.DBEncCellsHistory_BoundaryELon, T1.DBEncCellsHistory_PolygonPoints, T1.DBEncCellsHistory_BaseEdition, T1.DBEncCellsHistory_BaseIssueDate, T1.DBEncCellsHistory_LatestUpdateNumber, T1.DBEncCellsHistory_RecordLastUpdated, T1.DBEncCellsHistory_AddedDate, T1.DBEncCellsHistory_GeometryData, T1.DBEncCellsHistory_ReleaseDateUtc, T1.DBEncCellsHistory_CancelDateUtc, T1.DBEncCellsHistory_ReplaceDateUtc, T1.DBEncCellsHistory_Geography, T1.DBEncCellsHistory_DownloadedBaseEdition, T1.DBEncCellsHistory_DownloadedUpdateNumber, T1.DBEncCellsHistory_DownloadedUtcDate)
    FROM (
        SELECT 
            T.Id AS DBEncCellsHistory_Id, 
            T.UtcAuditDate AS DBEncCellsHistory_UtcAuditDate, 
            T.IssuerId AS DBEncCellsHistory_IssuerId, 
            T.CellName AS DBEncCellsHistory_CellName, 
            T.Description AS DBEncCellsHistory_Description, 
            T.NavigationalPurpose AS DBEncCellsHistory_NavigationalPurpose, 
            T.BoundarySLat AS DBEncCellsHistory_BoundarySLat, 
            T.BoundaryWLon AS DBEncCellsHistory_BoundaryWLon, 
            T.BoundaryNLat AS DBEncCellsHistory_BoundaryNLat, 
            T.BoundaryELon AS DBEncCellsHistory_BoundaryELon, 
            T.PolygonPoints AS DBEncCellsHistory_PolygonPoints, 
            T.BaseEdition AS DBEncCellsHistory_BaseEdition, 
            T.BaseIssueDate AS DBEncCellsHistory_BaseIssueDate, 
            T.LatestUpdateNumber AS DBEncCellsHistory_LatestUpdateNumber, 
            T.RecordLastUpdated AS DBEncCellsHistory_RecordLastUpdated, 
            T.AddedDate AS DBEncCellsHistory_AddedDate, 
            T.GeometryData AS DBEncCellsHistory_GeometryData, 
            T.ReleaseDateUtc AS DBEncCellsHistory_ReleaseDateUtc, 
            T.CancelDateUtc AS DBEncCellsHistory_CancelDateUtc, 
            T.ReplaceDateUtc AS DBEncCellsHistory_ReplaceDateUtc, 
            T.Geography AS DBEncCellsHistory_Geography, 
            T.DownloadedBaseEdition AS DBEncCellsHistory_DownloadedBaseEdition, 
            T.DownloadedUpdateNumber AS DBEncCellsHistory_DownloadedUpdateNumber, 
            T.DownloadedUtcDate AS DBEncCellsHistory_DownloadedUtcDate, 
            True AS _from0
        FROM CodeFirstDatabase.DBEncCellsHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DBExchangeRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DBExchangeRate
        [CodeFirstDatabaseSchema.DBExchangeRate](T1.DBExchangeRate_BaseCurrency, T1.DBExchangeRate_ForeignCurrency, T1.DBExchangeRate_Rate)
    FROM (
        SELECT 
            T.BaseCurrency AS DBExchangeRate_BaseCurrency, 
            T.ForeignCurrency AS DBExchangeRate_ForeignCurrency, 
            T.Rate AS DBExchangeRate_Rate, 
            True AS _from0
        FROM EncManagementDbContext.ExchangeRates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EncManagementDbContext.ExchangeRates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ExchangeRates
        [EncDomain.SqlPersistanceEncObjects.DBExchangeRate](T1.DBExchangeRate_BaseCurrency, T1.DBExchangeRate_ForeignCurrency, T1.DBExchangeRate_Rate)
    FROM (
        SELECT 
            T.BaseCurrency AS DBExchangeRate_BaseCurrency, 
            T.ForeignCurrency AS DBExchangeRate_ForeignCurrency, 
            T.Rate AS DBExchangeRate_Rate, 
            True AS _from0
        FROM CodeFirstDatabase.DBExchangeRate AS T
    ) AS T1");
        }
    }
}
